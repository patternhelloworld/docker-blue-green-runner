version: '3'
services:
  ${PROJECT_NAME}-blue:
    container_name: ${PROJECT_NAME}-blue
    stdin_open: true
    tty: true
    image: ${PROJECT_NAME}:blue
    restart: always
    networks:
      - dbgr-net
    extra_hosts:
      - "${HOST_IP}:host-gateway"
    environment:
      - SERVICE_NAME=blue
    env_file:
      - .env
    volumes: []
    # After sending SIGTERM, Docker waits for a grace period (default is 10 seconds) to allow the process to exit.
    # If the process does not terminate within this grace period,
    # Docker sends a SIGKILL signal to terminate the process forcibly.
    stop_signal: SIGTERM
    stop_grace_period: ${DOCKER_COMPOSE_STOP_GRACEFUL_SHUTDOWN_PERIOD}
  ${PROJECT_NAME}-green:
    container_name: ${PROJECT_NAME}-green
    stdin_open: true
    tty: true
    image: ${PROJECT_NAME}:green
    restart: always
    networks:
      - dbgr-net
    extra_hosts:
      - "${HOST_IP}:host-gateway"
    environment:
      - SERVICE_NAME=green
    env_file:
      - .env
    volumes: []
    stop_signal: SIGTERM
    stop_grace_period: ${DOCKER_COMPOSE_STOP_GRACEFUL_SHUTDOWN_PERIOD}
networks:
  dbgr-net:
    external:
      name: dbgr-net
